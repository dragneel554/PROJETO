#include <iostream>

/*
(üëç‚âñ‚Äø‚Äø‚âñ)üëç  @o.douglax 
*/
/*
Fa√ßa um programa que leia 2 valores e informe se eles s√£o divisores perfeitos
*/
int main(){
//DECLARA√á√ÉO DE VARIAVEIS
//VARIAVEL QUE CONTEM O CONTROLE DO LOOP
char res;
 //VARIAVEL QUE LER O PROGRAMA ANTES DE REALIZAR A CONDI√á√ÉO DO LA√áO PRIMARIO
 do{

 int n=0,soma=0;
// COMANDO QUE EXIBE DADOS PARA O PERIFERICO DE SAIDA (PADR√ÉO)
 std::cout << "informe um numero inteiro:";
//COMANDO QUE CAPTURA O DADOS APARTIR DO PERIFERICO DE ENTRADA (PADR√ÉO)
 std::cin >> n;
 
//VARIAVEL QUE ALOCA O VALOR DO LA√áO
 int cont;
 //VARIAVEL QUE ALOCA O CALCULO DE DOBRO
 int dobro=2*n;
 
 for(cont=1;cont<=n;cont++)
  
  {
//se numero divido por cont for igual a zero ele acrescenta mais 1.
  if(n%cont==0)

  {

   soma=soma+cont;

  }

  }
//CONDICIONAL SE A SOMA DOS DIVISORES FOREM IGUAIS AOS NUMEROS ELES S√ÉO PERFEITOS
 if(soma==dobro)

 {
// COMANDO QUE EXIBE DADOS PARA O PERIFERICO DE SAIDA (PADR√ÉO)
  std::cout << "eh um numero perfeito";

 }
// SE A SOMA DOS DIVISORES N√ÉO FOREM IGUAIS AOS NUMEROS ELES N√ÉO S√ÉO PERFEITOS
 else

 {
// COMANDO QUE EXIBE DADOS PARA O PERIFERICO DE SAIDA (PADR√ÉO)
  std::cout << " nao eh um numero perfeito";

 }
 // COMANDO QUE EXIBE DADOS PARA O PERIFERICO DE SAIDA (PADR√ÉO)
 std::cout << "\nDeseja executar o programa novamente ? (s/n): ";
 //COMANDO QUE CAPTURA O DADOS APARTIR DO PERIFERICO DE ENTRADA (PADR√ÉO)
 std::cin >>res;
 }while(res == 's'); //LA√áO QUE REPETE O PROGRAMA OU ENCERRA
 }
